/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chessgui;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;

/**
 *
 * @author tylar
 */
public class GameOptionsPanel extends javax.swing.JPanel {

    MainFrame mainFrame;
    ButtonGroup gameTime, incrementTime;
    
    public GameOptionsPanel(MainFrame mainFrame) {
        initComponents();
        this.mainFrame = mainFrame;
        gameTime = new ButtonGroup();
        gameTime.add(TenMinButton);
        gameTime.add(TwentyMinButton);
        gameTime.add(ThirtyMinButton);
        
        incrementTime = new ButtonGroup();
        incrementTime.add(ZeroSecButton);
        incrementTime.add(FiveSecButton);
        incrementTime.add(TenSecButton);
        incrementTime.add(ThirtySecButton);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ComputerButton = new javax.swing.JButton();
        MultiplayerButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        ZeroSecButton = new javax.swing.JRadioButton();
        FiveSecButton = new javax.swing.JRadioButton();
        TenSecButton = new javax.swing.JRadioButton();
        ThirtySecButton = new javax.swing.JRadioButton();
        IncrementLabel = new javax.swing.JLabel();
        TenMinButton = new javax.swing.JRadioButton();
        TwentyMinButton = new javax.swing.JRadioButton();
        ThirtyMinButton = new javax.swing.JRadioButton();
        TimeLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(88, 88, 88));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        ComputerButton.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        ComputerButton.setText("Play Vs. Computer");
        ComputerButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        MultiplayerButton.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        MultiplayerButton.setText("Multiplayer");
        MultiplayerButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        MultiplayerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiplayerButtonActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        ZeroSecButton.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        ZeroSecButton.setText("0 Seconds");
        ZeroSecButton.setOpaque(false);
        ZeroSecButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZeroSecButtonActionPerformed(evt);
            }
        });

        FiveSecButton.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        FiveSecButton.setText("5 Seconds");
        FiveSecButton.setOpaque(false);

        TenSecButton.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        TenSecButton.setText("10 Seconds");
        TenSecButton.setOpaque(false);

        ThirtySecButton.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        ThirtySecButton.setText("30 Seconds");
        ThirtySecButton.setOpaque(false);

        IncrementLabel.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        IncrementLabel.setText("Select time increment on move:");

        TenMinButton.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        TenMinButton.setText("10 Minutes");
        TenMinButton.setOpaque(false);
        TenMinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TenMinButtonActionPerformed(evt);
            }
        });

        TwentyMinButton.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        TwentyMinButton.setText("20 Minutes");
        TwentyMinButton.setOpaque(false);

        ThirtyMinButton.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        ThirtyMinButton.setText("30 Minutes");
        ThirtyMinButton.setOpaque(false);

        TimeLabel.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        TimeLabel.setText("Select Starting Gametime:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ZeroSecButton)
                        .addGap(18, 18, 18)
                        .addComponent(FiveSecButton)
                        .addGap(18, 18, 18)
                        .addComponent(TenSecButton)
                        .addGap(18, 18, 18)
                        .addComponent(ThirtySecButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(TenMinButton)
                        .addGap(18, 18, 18)
                        .addComponent(TwentyMinButton)
                        .addGap(18, 18, 18)
                        .addComponent(ThirtyMinButton))
                    .addComponent(IncrementLabel)
                    .addComponent(TimeLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TenMinButton)
                    .addComponent(TwentyMinButton)
                    .addComponent(ThirtyMinButton))
                .addGap(50, 50, 50)
                .addComponent(IncrementLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ZeroSecButton)
                    .addComponent(FiveSecButton)
                    .addComponent(TenSecButton)
                    .addComponent(ThirtySecButton))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ComputerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MultiplayerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComputerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MultiplayerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ZeroSecButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZeroSecButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ZeroSecButtonActionPerformed

    private void MultiplayerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiplayerButtonActionPerformed

        if(ThirtyMinButton.isSelected()){
            if(ZeroSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 30, 0, mainFrame.boardName, mainFrame.piecesName));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(FiveSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 30, 5, mainFrame.boardName, mainFrame.piecesName));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(TenSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 30, 10, mainFrame.boardName, mainFrame.piecesName));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(ThirtySecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 30, 30, mainFrame.boardName, mainFrame.piecesName));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else if(TwentyMinButton.isSelected()){
            if(ZeroSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 20, 0, mainFrame.boardName, mainFrame.piecesName));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(FiveSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 20, 5, mainFrame.boardName, mainFrame.piecesName));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(TenSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 20, 10, mainFrame.boardName, mainFrame.piecesName));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(ThirtySecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 20, 30, mainFrame.boardName, mainFrame.piecesName));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else if(TenMinButton.isSelected()){
            if(ZeroSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 10, 0, mainFrame.boardName, mainFrame.piecesName));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(FiveSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 10, 5, mainFrame.boardName, mainFrame.piecesName));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(TenSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 10, 10, mainFrame.boardName, mainFrame.piecesName));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(ThirtySecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 10, 30, mainFrame.boardName, mainFrame.piecesName));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_MultiplayerButtonActionPerformed

    private void TenMinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TenMinButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TenMinButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ComputerButton;
    private javax.swing.JRadioButton FiveSecButton;
    private javax.swing.JLabel IncrementLabel;
    private javax.swing.JButton MultiplayerButton;
    private javax.swing.JRadioButton TenMinButton;
    private javax.swing.JRadioButton TenSecButton;
    private javax.swing.JRadioButton ThirtyMinButton;
    private javax.swing.JRadioButton ThirtySecButton;
    private javax.swing.JLabel TimeLabel;
    private javax.swing.JRadioButton TwentyMinButton;
    private javax.swing.JRadioButton ZeroSecButton;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chessgui;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;

/**
 *
 * @author tylar
 */
public class GameOptionsPanel extends javax.swing.JPanel {

    MainFrame mainFrame;
    ButtonGroup gameTime, incrementTime;
    
    public GameOptionsPanel(MainFrame mainFrame) {
        initComponents();
        this.mainFrame = mainFrame;
        gameTime = new ButtonGroup();
        gameTime.add(TenMinButton);
        gameTime.add(TwentyMinButton);
        gameTime.add(ThirtyMinButton);
        
        incrementTime = new ButtonGroup();
        incrementTime.add(ZeroSecButton);
        incrementTime.add(FiveSecButton);
        incrementTime.add(TenSecButton);
        incrementTime.add(ThirtySecButton);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TimeLabel = new javax.swing.JLabel();
        TenMinButton = new javax.swing.JRadioButton();
        TwentyMinButton = new javax.swing.JRadioButton();
        ThirtyMinButton = new javax.swing.JRadioButton();
        IncrementLabel = new javax.swing.JLabel();
        ZeroSecButton = new javax.swing.JRadioButton();
        FiveSecButton = new javax.swing.JRadioButton();
        TenSecButton = new javax.swing.JRadioButton();
        ThirtySecButton = new javax.swing.JRadioButton();
        ComputerButton = new javax.swing.JButton();
        MultiplayerButton = new javax.swing.JButton();

        TimeLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        TimeLabel.setText("Game Time:");

        TenMinButton.setText("10 Minutes");

        TwentyMinButton.setText("20 Minutes");

        ThirtyMinButton.setText("30 Minutes");

        IncrementLabel.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        IncrementLabel.setText("Time Increment:");

        ZeroSecButton.setText("0 Seconds");
        ZeroSecButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZeroSecButtonActionPerformed(evt);
            }
        });

        FiveSecButton.setText("5 Seconds");

        TenSecButton.setText("10 Seconds");

        ThirtySecButton.setText("30 Seconds");

        ComputerButton.setText("Play Vs. Computer");

        MultiplayerButton.setText("Multiplayer");
        MultiplayerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiplayerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TenMinButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TwentyMinButton)
                        .addGap(18, 18, 18)
                        .addComponent(ThirtyMinButton))
                    .addComponent(TimeLabel)
                    .addComponent(IncrementLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ComputerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MultiplayerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(ZeroSecButton)
                            .addGap(18, 18, 18)
                            .addComponent(FiveSecButton)
                            .addGap(18, 18, 18)
                            .addComponent(TenSecButton)
                            .addGap(18, 18, 18)
                            .addComponent(ThirtySecButton))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TenMinButton)
                    .addComponent(TwentyMinButton)
                    .addComponent(ThirtyMinButton))
                .addGap(18, 18, 18)
                .addComponent(IncrementLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ZeroSecButton)
                    .addComponent(FiveSecButton)
                    .addComponent(TenSecButton)
                    .addComponent(ThirtySecButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComputerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MultiplayerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ZeroSecButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZeroSecButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ZeroSecButtonActionPerformed

    private void MultiplayerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiplayerButtonActionPerformed

        if(ThirtyMinButton.isSelected()){
            if(ZeroSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 30, 0));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(FiveSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 30, 5));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(TenSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 30, 10));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(ThirtySecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 30, 30));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else if(TwentyMinButton.isSelected()){
            if(ZeroSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 20, 0));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(FiveSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 20, 5));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(TenSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 20, 10));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(ThirtySecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 20, 30));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else if(TenMinButton.isSelected()){
            if(ZeroSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 10, 0));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(FiveSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 10, 5));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(TenSecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 10, 10));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(ThirtySecButton.isSelected()){
                try {
                    mainFrame.setNewPanel(new GameUI(mainFrame, 10, 30));
                } catch (IOException ex) {
                    Logger.getLogger(GameOptionsPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_MultiplayerButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ComputerButton;
    private javax.swing.JRadioButton FiveSecButton;
    private javax.swing.JLabel IncrementLabel;
    private javax.swing.JButton MultiplayerButton;
    private javax.swing.JRadioButton TenMinButton;
    private javax.swing.JRadioButton TenSecButton;
    private javax.swing.JRadioButton ThirtyMinButton;
    private javax.swing.JRadioButton ThirtySecButton;
    private javax.swing.JLabel TimeLabel;
    private javax.swing.JRadioButton TwentyMinButton;
    private javax.swing.JRadioButton ZeroSecButton;
    // End of variables declaration//GEN-END:variables
}
